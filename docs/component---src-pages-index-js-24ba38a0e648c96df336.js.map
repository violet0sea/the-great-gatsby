{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","_ref2","node","key","id","className","to","frontmatter","path","date","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","defaultProps","Layout","Fragment","header","site","siteMetadata","Date","getFullYear","href","_755544856","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAyBaI,GAzBbJ,EAAA,KAyBkB,cAqBHW,UAvCG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBP,EAAAQ,EAAAC,cAACN,EAAA,EAAD,KACEH,EAAAQ,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,OAAOC,SAAU,CAAC,SAAU,cAAe,WAEtDX,EAAAQ,EAAAC,cAAA,UACGF,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChChB,EAAAQ,EAAAC,cAAA,MAAIQ,IAAKD,EAAKE,GAAIC,UAAU,aAC1BnB,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAMkB,GAAIJ,EAAKK,YAAYC,MACzBtB,EAAAQ,EAAAC,cAAA,UAAKO,EAAKK,YAAYX,OACtBV,EAAAQ,EAAAC,cAAA,YAAOO,EAAKK,YAAYE,MACxBvB,EAAAQ,EAAAC,cAAA,SAAIO,EAAKQ,kDCjBrB9B,EAAAG,EAAAD,EAAA,sBAAA6B,IAAA,IAAA1B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA2B,EAAAhC,EAAA,GAAAiC,EAAAjC,EAAAO,EAAAyB,GAAAE,EAAAlC,EAAA,IAAAmC,EAAAnC,EAAAO,EAAA2B,GAAAlC,EAAAG,EAAAD,EAAA,sBAAAiC,EAAArB,IAAAd,EAAA,SAYMoC,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBjC,EAAAQ,EAAAC,cAACqB,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM1B,MACL4B,EAAgBF,EAAMnC,QAAUqC,EAAgBF,EAAMnC,OAAOS,MAEtD0B,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAM1B,KAAO0B,EAAM1B,KAAKA,KAAO4B,EAAgBF,EAAMnC,OAAOS,MAGvDP,EAAAQ,EAAAC,cAAA,uCA4BfgB,EAAYa,UAAY,CACtB/B,KAAMgC,IAAUC,OAChB1C,MAAOyC,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6KCMzCK,EAAmB,SAAA3C,GAAkB,IAAf4C,EAAe5C,EAAf4C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvB,IAAMtB,cAAc8C,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,oGCjBTW,EAAS,SAAAtD,GAAA,IAAGuD,EAAHvD,EAAGuD,UAAH,OACbC,EAAAtD,EAAAC,cAAA,UAAQU,UAAU,UAChB2C,EAAAtD,EAAAC,cAAA,UACEqD,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CAAM3C,GAAG,KAAKyC,IAEhBC,EAAAtD,EAAAC,cAAA,UACEqD,EAAAtD,EAAAC,cAAA,UACEqD,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CAAM3C,GAAG,UAAT,aAMRwC,EAAOtB,UAAY,CACjBuB,UAAWtB,IAAUE,QAGvBmB,EAAOI,aAAe,CACpBH,UAAW,IAGED,QCXTK,UAAS,SAAA3D,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAH,OACbyB,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CACEjE,MAAK,YASLsC,OAAQ,SAAA7B,GAAI,OACVuD,EAAAtD,EAAAC,cAAAqD,EAAAtD,EAAA0D,SAAA,KACEJ,EAAAtD,EAAAC,cAAC0D,EAAD,CAAQN,UAAWtD,EAAK6D,KAAKC,aAAa3D,QAC1CoD,EAAAtD,EAAAC,cAAA,WACEqD,EAAAtD,EAAAC,cAAA,QAAMU,UAAU,QAAQkB,GACxByB,EAAAtD,EAAAC,cAAA,oBACK,IAAI6D,MAAOC,cADhB,eAC2C,IACzCT,EAAAtD,EAAAC,cAAA,KAAG+D,KAAK,4BAAR,mBACC,KAHH,SAfRjE,KAAAkE,MA0BFR,EAAO3B,UAAY,CACjBD,SAAUE,IAAUvB,KAAK0B,YAGZuB,uGCjCf,SAASS,EAATpE,GAA2D,IAA5CqE,EAA4CrE,EAA5CqE,YAAaC,EAA+BtE,EAA/BsE,KAAMC,EAAyBvE,EAAzBuE,KAAMlE,EAAmBL,EAAnBK,SAAUD,EAASJ,EAATI,MACxC0D,EADiDU,EAAAvE,KACjD6D,KAcFW,EAAkBJ,GAAeP,EAAKC,aAAaM,YAEzD,OACEK,EAAAxE,EAAAC,cAACwE,EAAAzE,EAAD,CACE0E,eAAgB,CACdN,QAEFlE,MAAOA,EACPyE,cAAa,QAAUf,EAAKC,aAAa3D,MACzCmE,KAAM,CACJ,CACEO,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAS3E,GAEX,CACE4E,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASjB,EAAKC,aAAakB,QAE7B,CACEH,KAAM,gBACNC,QAAS3E,GAEX,CACE0E,KAAM,sBACNC,QAASN,IAGVS,OACC7E,EAAS8E,OAAS,EACd,CACAL,KAAM,WACNC,QAAS1E,EAAS+E,KAAK,OAEvB,IAELF,OAAOX,KAKhBH,EAAIV,aAAe,CACjBY,KAAM,KACNC,KAAM,GACNlE,SAAU,GACVgE,YAAa,IAGfD,EAAIpC,UAAY,CACdqC,YAAapC,IAAUE,OACvBmC,KAAMrC,IAAUE,OAChBoC,KAAMtC,IAAUoD,QAAQpD,IAAUC,QAClC7B,SAAU4B,IAAUoD,QAAQpD,IAAUE,QACtC/B,MAAO6B,IAAUE,OAAOC,YAGXgC","file":"component---src-pages-index-js-24ba38a0e648c96df336.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport '../assets/css/index.scss';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n\n    <ul>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <li key={node.id} className=\"blog-list\">\n          <Link to={node.frontmatter.path}>\n            <h3>{node.frontmatter.title}</h3>\n            <span>{node.frontmatter.date}</span>\n            <p>{node.excerpt}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nexport const query = graphql`\n  query homepagePostQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            path\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <h1>\n      <Link to=\"/\">{siteTitle}</Link>\n    </h1>\n    <ul>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n    </ul>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.scss';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>\n          <main className=\"main\">{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with{' '}\n            <a href=\"https://www.gatsbyjs.org\">Build by Gatsby</a>\n            {'  '}🚀\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              name: 'keywords',\n              content: keywords.join(', '),\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}