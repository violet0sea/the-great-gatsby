{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","_ref2","node","key","id","to","frontmatter","path","date","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","className","gatsby_browser_entry","defaultProps","Layout","Fragment","header","site","siteMetadata","Date","getFullYear","href","_755544856","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-e7d8b965dfe12e1df40a.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n\r\n    <ul>\r\n      {data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <li key={node.id}>\r\n          <Link to={node.frontmatter.path}>\r\n            <h3>{node.frontmatter.title}</h3>\r\n            <span>{node.frontmatter.date}</span>\r\n            <p>{node.excerpt}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n);\r\n\r\nexport const query = graphql`\r\n  query homepagePostQuery {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date\r\n            path\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header className=\"header\">\r\n    <h1>\r\n      <Link to=\"/\">{siteTitle}</Link>\r\n    </h1>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n    </ul>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nimport Header from './header';\r\nimport './layout.scss';\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div>\r\n          <main className=\"main\">{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n            {'  '}🚀\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}