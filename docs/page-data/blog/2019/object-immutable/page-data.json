{"componentChunkName":"component---src-templates-blog-js","path":"/blog/2019/object-immutable","result":{"data":{"markdownRemark":{"html":"<p>在某些场合下需要JS生成的对象不可变，【不可变】这里不单单指对象属性值不可变，也包含属性不可删除，不可以新增属性；具体需要哪一种得根据实际情况判断。整理4种相关的方法如下：</p>\n<h3>Object.defineProperty</h3>\n<p>设置对象属性的writable:false &#x26; configurable: false，可以使该属性无法修改，无法删除；</p>\n<pre><code>var obj = {};\n\nObject.defineProperty(obj, 'a', {\n    value: 1,\n    writable: false,\n    configurable: false\n});\n</code></pre>\n<p>注意： 如果只是不可以修改，能删除，可以设置configurable为true</p>\n<h3>Object.preventExtensions</h3>\n<p>创建一个无法被扩展的对象，即不允许新增属性到对象</p>\n<pre><code>var obj = {\n    a: 1\n};\n\nObject.preventExtensions(obj);\n\nobj.b = 2; // 无法新增，严格模式下会报错\nobj.a = 3; // 可以修改\ndelete obj.a; // 可以删除\n</code></pre>\n<h3>Object.seal</h3>\n<p>创建一个密封的对象，即拥有无法被扩展的属性，同时属性的configurable为false</p>\n<pre><code>var obj = {\n    a: 1\n};\nObject.seal(obj);\n\nobj.a = 2; // 可以修改\ndelete obj.a; // 无法删除\n</code></pre>\n<h3>Object.freeze</h3>\n<p>创建一个冻结的对象，具有最严苛的不可变特性，不仅具备seal的特性，而且属性的writable为false</p>\n<pre><code>var obj = {\n    a: 1,\n    b: {\n        c: 1\n    }\n};\nObject.freeze(obj);\n\nobj.a = 2; // 不可以修改\ndelete obj.a; // 无法删除\nobj.b.c = 2; // 可以修改,仅仅是浅层冻结\n</code></pre>","frontmatter":{"title":"JavaScript里实现对象不可变"}}},"pageContext":{"slug":"/blog/2019/object-immutable/"}}}